--- celeste/Decompiled/Celeste/Audio.cs
+++ celeste/Celeste/Audio.cs
@@ -6,7 +6,6 @@
 using FMOD.Studio;
 using Microsoft.Xna.Framework;
 using Monocle;
-using SDL2;
 
 namespace Celeste;
 
@@ -29,19 +28,19 @@
 		public static Bank Load(string name, bool loadStrings)
 		{
 			string text = Path.Combine(Engine.ContentDirectory, "FMOD", "Desktop", name);
-			CheckFmod(system.loadBankFile(text + ".bank", LOAD_BANK_FLAGS.NORMAL, out var bank));
+			CheckFmod(system.Value.loadBankFile(text + ".bank", LOAD_BANK_FLAGS.NORMAL, out var bank));
 			bank.loadSampleData();
 			if (loadStrings)
 			{
-				CheckFmod(system.loadBankFile(text + ".strings.bank", LOAD_BANK_FLAGS.NORMAL, out var _));
+				CheckFmod(system.Value.loadBankFile(text + ".strings.bank", LOAD_BANK_FLAGS.NORMAL, out var _));
 			}
 			return bank;
 		}
 	}
 
-	private static FMOD.Studio.System system;
+	private static FMOD.Studio.System? system;
 
-	private static FMOD.Studio._3D_ATTRIBUTES attributes3d = default(FMOD.Studio._3D_ATTRIBUTES);
+	private static FMOD.ATTRIBUTES_3D attributes3d = default(FMOD.ATTRIBUTES_3D);
 
 	public static Dictionary<string, EventDescription> cachedEventDescriptions = new Dictionary<string, EventDescription>();
 
@@ -49,23 +48,23 @@
 
 	private static bool ready;
 
-	private static EventInstance currentMusicEvent = null;
+	private static EventInstance? currentMusicEvent = null;
 
-	private static EventInstance currentAltMusicEvent = null;
+	private static EventInstance? currentAltMusicEvent = null;
 
-	private static EventInstance currentAmbientEvent = null;
+	private static EventInstance? currentAmbientEvent = null;
 
-	private static EventInstance mainDownSnapshot = null;
+	private static EventInstance? mainDownSnapshot = null;
 
 	public static string CurrentMusic = "";
 
 	private static bool musicUnderwater;
 
-	private static EventInstance musicUnderwaterSnapshot;
+	private static EventInstance? musicUnderwaterSnapshot;
 
-	public static EventInstance CurrentMusicEventInstance => currentMusicEvent;
+	public static EventInstance? CurrentMusicEventInstance => currentMusicEvent;
 
-	public static EventInstance CurrentAmbienceEventInstance => currentAmbientEvent;
+	public static EventInstance? CurrentAmbienceEventInstance => currentAmbientEvent;
 
 	public static float MusicVolume
 	{
@@ -170,13 +169,11 @@
 		{
 			studioFlags = FMOD.Studio.INITFLAGS.LIVEUPDATE;
 		}
-		CheckFmod(FMOD.Studio.System.create(out Audio.system));
-		Audio.system.getLowLevelSystem(out var system);
-		if (SDL.SDL_GetPlatform().Equals("Linux"))
-		{
-			FMOD_SDL_Register(system.getRaw());
-		}
-		CheckFmod(Audio.system.initialize(1024, studioFlags, FMOD.INITFLAGS.NORMAL, IntPtr.Zero));
+		CheckFmod(FMOD.Studio.System.create(out var system));
+		system.getCoreSystem(out var coreSystem);
+		coreSystem.setDSPBufferSize(2048, 8);
+		CheckFmod(system.initialize(1024, studioFlags, FMOD.INITFLAGS.NORMAL, IntPtr.Zero));
+		Audio.system = system;
 		attributes3d.forward = new VECTOR
 		{
 			x = 0f,
@@ -197,7 +194,7 @@
 	{
 		if (system != null && ready)
 		{
-			CheckFmod(system.update());
+			CheckFmod(system.Value.update());
 		}
 	}
 
@@ -205,15 +202,15 @@
 	{
 		if (system != null)
 		{
-			CheckFmod(system.unloadAll());
-			CheckFmod(system.release());
+			CheckFmod(system.Value.unloadAll());
+			CheckFmod(system.Value.release());
 			system = null;
 		}
 	}
 
 	public static void SetListenerPosition(Vector3 forward, Vector3 up, Vector3 position)
 	{
-		FMOD.Studio._3D_ATTRIBUTES attributes = default(FMOD.Studio._3D_ATTRIBUTES);
+		FMOD.ATTRIBUTES_3D attributes = default(FMOD.ATTRIBUTES_3D);
 		attributes.forward.x = forward.X;
 		attributes.forward.z = forward.Y;
 		attributes.forward.z = forward.Z;
@@ -223,7 +220,7 @@
 		attributes.position.x = position.X;
 		attributes.position.y = position.Y;
 		attributes.position.z = position.Z;
-		system.setListenerAttributes(0, attributes);
+		system.Value.setListenerAttributes(0, attributes);
 	}
 
 	public static void SetCamera(Camera camera)
@@ -239,133 +236,133 @@
 		}
 	}
 
-	public static EventInstance Play(string path)
+	public static EventInstance? Play(string path)
 	{
-		EventInstance eventInstance = CreateInstance(path);
+		EventInstance? eventInstance = CreateInstance(path);
 		if (eventInstance != null)
 		{
-			eventInstance.start();
-			eventInstance.release();
+			eventInstance.Value.start();
+			eventInstance.Value.release();
 		}
 		return eventInstance;
 	}
 
-	public static EventInstance Play(string path, string param, float value)
+	public static EventInstance? Play(string path, string param, float value)
 	{
-		EventInstance eventInstance = CreateInstance(path);
+		EventInstance? eventInstance = CreateInstance(path);
 		if (eventInstance != null)
 		{
 			SetParameter(eventInstance, param, value);
-			eventInstance.start();
-			eventInstance.release();
+			eventInstance.Value.start();
+			eventInstance.Value.release();
 		}
 		return eventInstance;
 	}
 
-	public static EventInstance Play(string path, Vector2 position)
+	public static EventInstance? Play(string path, Vector2 position)
 	{
-		EventInstance eventInstance = CreateInstance(path, position);
+		EventInstance? eventInstance = CreateInstance(path, position);
 		if (eventInstance != null)
 		{
-			eventInstance.start();
-			eventInstance.release();
+			eventInstance.Value.start();
+			eventInstance.Value.release();
 		}
 		return eventInstance;
 	}
 
-	public static EventInstance Play(string path, Vector2 position, string param, float value)
+	public static EventInstance? Play(string path, Vector2 position, string param, float value)
 	{
-		EventInstance eventInstance = CreateInstance(path, position);
+		EventInstance? eventInstance = CreateInstance(path, position);
 		if (eventInstance != null)
 		{
 			if (param != null)
 			{
-				eventInstance.setParameterValue(param, value);
+				eventInstance.Value.setParameterByName(param, value);
 			}
-			eventInstance.start();
-			eventInstance.release();
+			eventInstance.Value.start();
+			eventInstance.Value.release();
 		}
 		return eventInstance;
 	}
 
-	public static EventInstance Play(string path, Vector2 position, string param, float value, string param2, float value2)
+	public static EventInstance? Play(string path, Vector2 position, string param, float value, string param2, float value2)
 	{
-		EventInstance eventInstance = CreateInstance(path, position);
+		EventInstance? eventInstance = CreateInstance(path, position);
 		if (eventInstance != null)
 		{
 			if (param != null)
 			{
-				eventInstance.setParameterValue(param, value);
+				eventInstance.Value.setParameterByName(param, value);
 			}
 			if (param2 != null)
 			{
-				eventInstance.setParameterValue(param2, value2);
+				eventInstance.Value.setParameterByName(param2, value2);
 			}
-			eventInstance.start();
-			eventInstance.release();
+			eventInstance.Value.start();
+			eventInstance.Value.release();
 		}
 		return eventInstance;
 	}
 
-	public static EventInstance Loop(string path)
+	public static EventInstance? Loop(string path)
 	{
-		EventInstance eventInstance = CreateInstance(path);
+		EventInstance? eventInstance = CreateInstance(path);
 		if (eventInstance != null)
 		{
-			eventInstance.start();
+			eventInstance.Value.start();
 		}
 		return eventInstance;
 	}
 
-	public static EventInstance Loop(string path, string param, float value)
+	public static EventInstance? Loop(string path, string param, float value)
 	{
-		EventInstance eventInstance = CreateInstance(path);
+		EventInstance? eventInstance = CreateInstance(path);
 		if (eventInstance != null)
 		{
-			eventInstance.setParameterValue(param, value);
-			eventInstance.start();
+			eventInstance.Value.setParameterByName(param, value);
+			eventInstance.Value.start();
 		}
 		return eventInstance;
 	}
 
-	public static EventInstance Loop(string path, Vector2 position)
+	public static EventInstance? Loop(string path, Vector2 position)
 	{
-		EventInstance eventInstance = CreateInstance(path, position);
+		EventInstance? eventInstance = CreateInstance(path, position);
 		if (eventInstance != null)
 		{
-			eventInstance.start();
+			eventInstance.Value.start();
 		}
 		return eventInstance;
 	}
 
-	public static EventInstance Loop(string path, Vector2 position, string param, float value)
+	public static EventInstance? Loop(string path, Vector2 position, string param, float value)
 	{
-		EventInstance eventInstance = CreateInstance(path, position);
+		EventInstance? eventInstance = CreateInstance(path, position);
 		if (eventInstance != null)
 		{
-			eventInstance.setParameterValue(param, value);
-			eventInstance.start();
+			eventInstance.Value.setParameterByName(param, value);
+			eventInstance.Value.start();
 		}
 		return eventInstance;
 	}
 
-	public static void Pause(EventInstance instance)
+	public static void Pause(EventInstance? instance)
 	{
 		if (instance != null)
 		{
-			instance.setPaused(paused: true);
+			instance.Value.setPaused(paused: true);
 		}
 	}
 
-	public static void Resume(EventInstance instance)
+	public static void Resume(EventInstance? instance)
 	{
 		if (instance != null)
 		{
-			instance.setPaused(paused: false);
+			instance.Value.setPaused(paused: false);
 		}
 	}
 
-	public static void Position(EventInstance instance, Vector2 position)
+	public static void Position(EventInstance? instance, Vector2 position)
 	{
 		if (instance != null)
 		{
@@ -382,34 +379,34 @@
 			attributes3d.position.x = num;
 			attributes3d.position.y = position.Y - vector.Y;
 			attributes3d.position.z = 0f;
-			instance.set3DAttributes(attributes3d);
+			instance.Value.set3DAttributes(attributes3d);
 		}
 	}
 
-	public static void SetParameter(EventInstance instance, string param, float value)
+	public static void SetParameter(EventInstance? instance, string param, float value)
 	{
 		if (instance != null)
 		{
-			instance.setParameterValue(param, value);
+			instance.Value.setParameterByName(param, value);
 		}
 	}
 
-	public static void Stop(EventInstance instance, bool allowFadeOut = true)
+	public static void Stop(EventInstance? instance, bool allowFadeOut = true)
 	{
 		if (instance != null)
 		{
-			instance.stop((!allowFadeOut) ? STOP_MODE.IMMEDIATE : STOP_MODE.ALLOWFADEOUT);
-			instance.release();
+			instance.Value.stop((!allowFadeOut) ? STOP_MODE.IMMEDIATE : STOP_MODE.ALLOWFADEOUT);
+			instance.Value.release();
 		}
 	}
 
-	public static EventInstance CreateInstance(string path, Vector2? position = null)
+	public static EventInstance? CreateInstance(string path, Vector2? position = null)
 	{
-		EventDescription eventDescription = GetEventDescription(path);
+		EventDescription? eventDescription = GetEventDescription(path);
 		if (eventDescription != null)
 		{
-			eventDescription.createInstance(out var instance);
-			eventDescription.is3D(out var is3D);
+			eventDescription.Value.createInstance(out var instance);
+			eventDescription.Value.is3D(out var is3D);
 			if (is3D && position.HasValue)
 			{
 				Position(instance, position.Value);
@@ -419,12 +416,13 @@
 		return null;
 	}
 
-	public static EventDescription GetEventDescription(string path)
+	public static EventDescription? GetEventDescription(string path)
 	{
-		EventDescription value = null;
-		if (path != null && !cachedEventDescriptions.TryGetValue(path, out value))
+		EventDescription value;
+		bool ret = cachedEventDescriptions.TryGetValue(path, out value);
+		if (path != null && !ret)
 		{
-			RESULT @event = system.getEvent(path, out value);
+			RESULT @event = system.Value.getEvent(path, out value);
 			switch (@event)
 			{
 			case RESULT.OK:
@@ -458,12 +456,12 @@
 		}
 	}
 
-	public static string GetEventName(EventInstance instance)
+	public static string GetEventName(EventInstance? instance)
 	{
 		if (instance != null)
 		{
-			instance.getDescription(out var description);
-			if (description != null)
+			instance.Value.getDescription(out var description);
+			if (description.isValid())
 			{
 				string path = "";
 				description.getPath(out path);
@@ -473,11 +471,11 @@
 		return "";
 	}
 
-	public static bool IsPlaying(EventInstance instance)
+	public static bool IsPlaying(EventInstance? instance)
 	{
 		if (instance != null)
 		{
-			instance.getPlaybackState(out var state);
+			instance.Value.getPlaybackState(out var state);
 			if (state == PLAYBACK_STATE.PLAYING || state == PLAYBACK_STATE.STARTING)
 			{
 				return true;
@@ -489,7 +487,7 @@
 	public static bool BusPaused(string path, bool? pause = null)
 	{
 		bool paused = false;
-		if (system != null && system.getBus(path, out var bus) == RESULT.OK)
+		if (system != null && system.Value.getBus(path, out var bus) == RESULT.OK)
 		{
 			if (pause.HasValue)
 			{
@@ -503,7 +501,7 @@
 	public static bool BusMuted(string path, bool? mute)
 	{
 		bool paused = false;
-		if (system.getBus(path, out var bus) == RESULT.OK)
+		if (system.Value.getBus(path, out var bus) == RESULT.OK)
 		{
 			if (mute.HasValue)
 			{
@@ -516,7 +514,7 @@
 
 	public static void BusStopAll(string path, bool immediate = false)
 	{
-		if (system != null && system.getBus(path, out var bus) == RESULT.OK)
+		if (system != null && system.Value.getBus(path, out var bus) == RESULT.OK)
 		{
 			bus.stopAllEvents(immediate ? STOP_MODE.IMMEDIATE : STOP_MODE.ALLOWFADEOUT);
 		}
@@ -525,7 +523,7 @@
 	public static float VCAVolume(string path, float? volume = null)
 	{
 		VCA vca;
-		RESULT vCA = system.getVCA(path, out vca);
+		RESULT vCA = system.Value.getVCA(path, out vca);
 		float volume2 = 1f;
 		float finalvolume = 1f;
 		if (vCA == RESULT.OK)
@@ -541,8 +539,8 @@
 
 	public static EventInstance CreateSnapshot(string name, bool start = true)
 	{
-		system.getEvent(name, out var _event);
-		if (_event == null)
+		system.Value.getEvent(name, out var _event);
+		if (!_event.isValid())
 		{
 			throw new Exception("Snapshot " + name + " doesn't exist");
 		}
@@ -554,19 +552,19 @@
 		return instance;
 	}
 
-	public static void ResumeSnapshot(EventInstance snapshot)
+	public static void ResumeSnapshot(EventInstance? snapshot)
 	{
 		if (snapshot != null)
 		{
-			snapshot.start();
+			snapshot.Value.start();
 		}
 	}
 
-	public static bool IsSnapshotRunning(EventInstance snapshot)
+	public static bool IsSnapshotRunning(EventInstance? snapshot)
 	{
 		if (snapshot != null)
 		{
-			snapshot.getPlaybackState(out var state);
+			snapshot.Value.getPlaybackState(out var state);
 			if (state != 0 && state != PLAYBACK_STATE.STARTING)
 			{
 				return state == PLAYBACK_STATE.SUSTAINING;
@@ -576,20 +574,20 @@
 		return false;
 	}
 
-	public static void EndSnapshot(EventInstance snapshot)
+	public static void EndSnapshot(EventInstance? snapshot)
 	{
 		if (snapshot != null)
 		{
-			snapshot.stop(STOP_MODE.ALLOWFADEOUT);
+			snapshot.Value.stop(STOP_MODE.ALLOWFADEOUT);
 		}
 	}
 
-	public static void ReleaseSnapshot(EventInstance snapshot)
+	public static void ReleaseSnapshot(EventInstance? snapshot)
 	{
 		if (snapshot != null)
 		{
-			snapshot.stop(STOP_MODE.ALLOWFADEOUT);
-			snapshot.release();
+			snapshot.Value.stop(STOP_MODE.ALLOWFADEOUT);
+			snapshot.Value.release();
 		}
 	}
 
@@ -604,10 +602,10 @@
 		else if (!CurrentMusic.Equals(path, StringComparison.OrdinalIgnoreCase))
 		{
 			Stop(currentMusicEvent, allowFadeOut);
-			EventInstance eventInstance = CreateInstance(path);
+			EventInstance? eventInstance = CreateInstance(path);
 			if (eventInstance != null && startPlaying)
 			{
-				eventInstance.start();
+				eventInstance.Value.start();
 			}
 			currentMusicEvent = eventInstance;
 			CurrentMusic = GetEventName(eventInstance);
@@ -626,10 +624,10 @@
 		else if (!GetEventName(currentAmbientEvent).Equals(path, StringComparison.OrdinalIgnoreCase))
 		{
 			Stop(currentAmbientEvent);
-			EventInstance eventInstance = CreateInstance(path);
+			EventInstance? eventInstance = CreateInstance(path);
 			if (eventInstance != null && startPlaying)
 			{
-				eventInstance.start();
+				eventInstance.Value.start();
 			}
 			currentAmbientEvent = eventInstance;
 			return true;
@@ -641,7 +639,7 @@
 	{
 		if (currentMusicEvent != null)
 		{
-			currentMusicEvent.setParameterValue(path, value);
+			currentMusicEvent.Value.setParameterByName(path, value);
 		}
 	}
 
